{"version":3,"sources":["components/header/Header.js","components/footer/Footer.js","components/body/clockswitches/Clockswitches.js","context/AppContext.js","utilities/utilities.js","components/body/panels/CenterPanel.js","components/body/panels/LeftPanel.js","components/body/panels/RightPanel.js","components/body/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","className","Provider","value","Footer","decrementTimerInterval","href","AppContext","createContext","leftPad","val","playClickSound","keysound","document","getElementById","currentTime","play","Clockswitches","useContext","appState","dispatch","startTimer","timer","timerType","breaklength","sessionlength","beginCountDown","useCallback","setPreciseInterval","type","timerInterval","switchTimer","timerLength","useEffect","checkTimerStatus","Promise","resolve","reject","wait","setTimeout","clearPreciseInterval","classList","add","clearTimeout","executeBreaktime","playBreakSound","startNewTimer","remove","a","step_one","console","log","step_two","step_three","timerSequence","onClick","clearInterval","CenterPanel","min","Math","floor","sec","LeftPanel","htmlFor","RightPanel","Main","App","initialState","breaktime","useReducer","state","action","accInterval","src","preload","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7bd4afe8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { FaReact } from 'react-icons/fa';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header id='App-header'>\r\n      <h1>\r\n        Pomodoro\r\n        <span className='react'>\r\n          Cl\r\n          <IconContext.Provider value={{ className: 'react-icon' }}>\r\n            <FaReact />\r\n          </IconContext.Provider>\r\n          ck\r\n        </span>\r\n      </h1>\r\n      <p>Powered by React</p>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer id='App-footer'>\r\n      <p>\r\n        Design and develop by{' '}\r\n        <a href='mailto:info@paolodullano.com'>Dani Paolo S. Dullano</a>\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useContext, useCallback, useEffect } from 'react';\r\nimport { FaPlay, FaPause, FaRedoAlt } from 'react-icons/fa';\r\nimport { IconContext } from 'react-icons';\r\nimport AppContext from '../../../context/AppContext';\r\nimport { setPreciseInterval, clearPreciseInterval } from 'precise-interval';\r\nimport { playClickSound, playBreakSound } from '../../../utilities/utilities';\r\n\r\nvar decrementTimerInterval;\r\n\r\nfunction Clockswitches() {\r\n  const { appState, dispatch } = useContext(AppContext);\r\n  const { startTimer, timer, timerType, breaklength, sessionlength } = appState;\r\n\r\n  //const decrementTimerInterval = useRef();\r\n\r\n  const beginCountDown = useCallback(() => {\r\n    decrementTimerInterval = setPreciseInterval(\r\n      () => dispatch({ type: 'DECREMENT_TIMER' }),\r\n      1000\r\n    );\r\n    dispatch({\r\n      type: 'BEGIN_COUNTDOWN',\r\n      timerInterval: decrementTimerInterval\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const switchTimer = useCallback(\r\n    (timerLength, timerType) => {\r\n      dispatch({\r\n        type: 'SWITCH_TIMER',\r\n        timerType: timerType,\r\n        timer: timerLength\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    function checkTimerStatus() {\r\n      return new Promise((resolve, reject) => {\r\n        let wait = setTimeout(() => {\r\n          if (timerType === 'Session') {\r\n            clearPreciseInterval(decrementTimerInterval);\r\n            switchTimer(breaklength * 60, 'Break');\r\n          } else if (timerType === 'Break') {\r\n            clearPreciseInterval(decrementTimerInterval);\r\n            switchTimer(sessionlength * 60, 'Session');\r\n          }\r\n          document.getElementById('pomodoro-clock').classList.add('shakeme');\r\n          clearTimeout(wait);\r\n          resolve('switch timer');\r\n        }, 0);\r\n      });\r\n    }\r\n\r\n    function executeBreaktime() {\r\n      return new Promise((resolve, reject) => {\r\n        let wait = setTimeout(() => {\r\n          playBreakSound();\r\n          clearTimeout(wait);\r\n          resolve('shake the app');\r\n        }, 100);\r\n      });\r\n    }\r\n\r\n    function startNewTimer() {\r\n      return new Promise((resolve, reject) => {\r\n        let wait = setTimeout(() => {\r\n          beginCountDown();\r\n          document.getElementById('pomodoro-clock').classList.remove('shakeme');\r\n          resolve('start new timer');\r\n          clearTimeout(wait);\r\n        }, 0);\r\n      });\r\n    }\r\n\r\n    async function timerSequence() {\r\n      const step_one = await checkTimerStatus();\r\n      console.log(step_one);\r\n      const step_two = await executeBreaktime();\r\n      console.log(step_two);\r\n      const step_three = await startNewTimer();\r\n      console.log(step_three);\r\n    }\r\n\r\n    if (timer === 0) {\r\n      timerSequence();\r\n    }\r\n  }, [\r\n    timer,\r\n    beginCountDown,\r\n    breaklength,\r\n    sessionlength,\r\n    switchTimer,\r\n    timerType\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (startTimer === false) {\r\n      clearPreciseInterval(decrementTimerInterval);\r\n    } else {\r\n      beginCountDown();\r\n    }\r\n  }, [startTimer, beginCountDown]);\r\n\r\n  const handleReset = () => {\r\n    dispatch({ type: 'RESET_CLOCK' });\r\n    clearInterval(decrementTimerInterval);\r\n    playClickSound();\r\n  };\r\n\r\n  const handlePlayPause = () => {\r\n    if (startTimer === false) {\r\n      dispatch({ type: 'SET_TIMER', startTimer: true });\r\n    } else if (startTimer === true) {\r\n      dispatch({ type: 'SET_TIMER', startTimer: false });\r\n      clearPreciseInterval(decrementTimerInterval);\r\n    }\r\n    playClickSound();\r\n  };\r\n\r\n  return (\r\n    <section id='clock-switches'>\r\n      <IconContext.Provider value={{ className: 'btn-icon' }}>\r\n        <button onClick={handlePlayPause} className='btn flex-btn'>\r\n          <FaPlay /> play / <FaPause />\r\n          pause\r\n        </button>\r\n      </IconContext.Provider>\r\n      <IconContext.Provider value={{ className: 'btn-icon' }}>\r\n        <button onClick={handleReset} className='btn flex-btn'>\r\n          <FaRedoAlt /> reset\r\n        </button>\r\n      </IconContext.Provider>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Clockswitches;\r\n","import { createContext } from 'react';\r\n\r\nconst AppContext = createContext();\r\nexport default AppContext;\r\n","export const leftPad = val => {\r\n  if (val < 10) return `0${val}`;\r\n  return `${val}`;\r\n};\r\n\r\nexport const playClickSound = () => {\r\n  const keysound = document.getElementById('keysound');\r\n  keysound.currentTime = 0;\r\n  keysound.play();\r\n};\r\n\r\nexport const playBreakSound = () => {\r\n  const keysound = document.getElementById('beep');\r\n  keysound.currentTime = 0;\r\n  keysound.play();\r\n};\r\n","import React, { useContext } from 'react';\r\nimport AppContext from '../../../context/AppContext';\r\nimport { leftPad } from '../../../utilities/utilities';\r\n\r\nfunction CenterPanel() {\r\n  const { appState } = useContext(AppContext);\r\n  const { timer, timerType } = appState;\r\n  const min = leftPad(Math.floor(timer / 60));\r\n  const sec = leftPad(timer % 60);\r\n\r\n  return (\r\n    <div id='center-panel' className='panel'>\r\n      <div className='clock-screen'>\r\n        <label className='timer-label'>{timerType}</label>\r\n        <h3 className='time-left'>\r\n          {min}:{sec}\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CenterPanel;\r\n","import React, { useContext } from 'react';\r\nimport AppContext from '../../../context/AppContext';\r\nimport { playClickSound } from '../../../utilities/utilities';\r\n\r\nfunction LeftPanel() {\r\n  const { appState, dispatch } = useContext(AppContext);\r\n  const { breaklength, startTimer, timerType } = appState;\r\n\r\n  const handleIncrement = () => {\r\n    if (startTimer === false) {\r\n      if (breaklength !== 60) {\r\n        if (timerType === 'Break') {\r\n          dispatch({ type: 'INCREMENT_BREAK' });\r\n          dispatch({\r\n            type: 'DECREMENT_BREAK_TIMER',\r\n            timer: breaklength * 60 + 60\r\n          });\r\n        } else {\r\n          dispatch({ type: 'INCREMENT_BREAK' });\r\n        }\r\n      }\r\n    }\r\n    playClickSound();\r\n  };\r\n\r\n  const handleDecrement = () => {\r\n    if (startTimer === false) {\r\n      if (breaklength !== 1) {\r\n        if (timerType === 'Break') {\r\n          dispatch({ type: 'DECREMENT_BREAK' });\r\n          dispatch({\r\n            type: 'DECREMENT_BREAK_TIMER',\r\n            timer: breaklength * 60 - 60\r\n          });\r\n        } else {\r\n          dispatch({ type: 'DECREMENT_BREAK' });\r\n        }\r\n      }\r\n    }\r\n    playClickSound();\r\n  };\r\n\r\n  return (\r\n    <aside id='left-panel' className='panel aside-panel'>\r\n      <label htmlFor='' className='panel-label'>\r\n        Break Length\r\n      </label>\r\n      <div className='panel-screen'>\r\n        <h3 className='editable-counter'>{breaklength}</h3>\r\n      </div>\r\n      <div className='panel-controls'>\r\n        <button onClick={handleDecrement} className='btn panel-btn'>\r\n          -\r\n        </button>\r\n        <button onClick={handleIncrement} className='btn panel-btn'>\r\n          +\r\n        </button>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default LeftPanel;\r\n","import React, { useContext } from 'react';\r\nimport AppContext from '../../../context/AppContext';\r\nimport { playClickSound } from '../../../utilities/utilities';\r\n\r\nfunction RightPanel() {\r\n  const { appState, dispatch } = useContext(AppContext);\r\n  const { sessionlength, startTimer, timerType } = appState;\r\n\r\n  const handleIncrement = () => {\r\n    if (startTimer === false) {\r\n      if (sessionlength !== 60) {\r\n        if (timerType === 'Session') {\r\n          dispatch({ type: 'INCREMENT_SESSION' });\r\n          dispatch({\r\n            type: 'INCREMENT_SESSION_TIMER',\r\n            timer: sessionlength * 60 + 60\r\n          });\r\n        } else {\r\n          dispatch({ type: 'INCREMENT_SESSION' });\r\n        }\r\n      }\r\n    }\r\n    playClickSound();\r\n  };\r\n\r\n  const handleDecrement = () => {\r\n    if (startTimer === false) {\r\n      if (sessionlength !== 1) {\r\n        if (timerType === 'Session') {\r\n          dispatch({ type: 'DECREMENT_SESSION' });\r\n          dispatch({\r\n            type: 'INCREMENT_SESSION_TIMER',\r\n            timer: sessionlength * 60 - 60\r\n          });\r\n        } else {\r\n          dispatch({ type: 'DECREMENT_SESSION' });\r\n        }\r\n      }\r\n    }\r\n    playClickSound();\r\n  };\r\n\r\n  return (\r\n    <aside id='right-panel' className='panel aside-panel'>\r\n      <label htmlFor='' className='panel-label'>\r\n        Session Length\r\n      </label>\r\n      <div className='panel-screen'>\r\n        <h3 className='editable-counter'>{sessionlength}</h3>\r\n      </div>\r\n      <div className='panel-controls'>\r\n        <button onClick={handleDecrement} className='btn'>\r\n          -\r\n        </button>\r\n        <button onClick={handleIncrement} className='btn'>\r\n          +\r\n        </button>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default RightPanel;\r\n","import React from 'react';\r\nimport Clockswitches from './clockswitches/Clockswitches';\r\nimport CenterPanel from './panels/CenterPanel';\r\nimport LeftPanel from './panels/LeftPanel';\r\nimport RightPanel from './panels/RightPanel';\r\n\r\nfunction Main() {\r\n  return (\r\n    <main id='App-body'>\r\n      <section className='center-screen'>\r\n        <LeftPanel />\r\n        <CenterPanel />\r\n        <RightPanel />\r\n      </section>\r\n      <Clockswitches />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React, { useReducer } from 'react';\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\nimport Main from './components/body/Main';\nimport AppContext from './context/AppContext';\nimport './stylesheet/styles.scss';\n//import { setPreciseInterval, clearPreciseInterval } from 'precise-interval';\n\nfunction App() {\n  const initialState = {\n    breaklength: 5,\n    sessionlength: 25,\n    startTimer: false,\n    timerType: 'Session',\n    timer: 1500,\n    timerInterval: '',\n    breaktime: ''\n  };\n\n  const stateReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'INCREMENT_BREAK':\n        return { ...state, breaklength: state.breaklength + 1 };\n      case 'DECREMENT_BREAK':\n        return { ...state, breaklength: state.breaklength - 1 };\n      case 'INCREMENT_SESSION':\n        return { ...state, sessionlength: state.sessionlength + 1 };\n      case 'DECREMENT_SESSION':\n        return { ...state, sessionlength: state.sessionlength - 1 };\n      case 'INCREMENT_BREAK_TIMER':\n        return { ...state, timer: action.timer };\n      case 'DECREMENT_BREAK_TIMER':\n        return { ...state, timer: action.timer };\n      case 'INCREMENT_SESSION_TIMER':\n        return { ...state, timer: action.timer };\n      case 'DECREMENT_SESSION_TIMER':\n        return { ...state, timer: action.timer };\n      case 'SET_TIMER':\n        return { ...state, startTimer: action.startTimer };\n      case 'BEGIN_COUNTDOWN':\n        return {\n          ...state,\n          timerInterval: action.timerInterval\n        };\n      case 'INCREMENT_TIMER':\n        return { ...state, timer: state.timer + 1 };\n      case 'DECREMENT_TIMER':\n        return { ...state, timer: state.timer - 1 };\n      case 'SWITCH_TIMER':\n        return { ...state, timerType: action.timerType, timer: action.timer };\n      case 'RESET_CLOCK':\n        return {\n          ...state,\n          breaklength: 5,\n          sessionlength: 25,\n          startTimer: false,\n          timerType: 'Session',\n          timer: 1500,\n          accInterval: '',\n          breaktime: ''\n        };\n      default:\n        return state;\n    }\n  };\n  const [appState, dispatch] = useReducer(stateReducer, initialState);\n  //const audioBuzzer = useRef();\n  return (\n    <AppContext.Provider value={{ appState, dispatch }}>\n      <div id='pomodoro-clock' className='App'>\n        <Header />\n        <Main />\n        <Footer />\n        <audio\n          id='keysound'\n          className='hidden'\n          src='https://res.cloudinary.com/dzsmdyknz/video/upload/v1533087306/sample-swap/sfx-and-unusual-sounds/bleeps-blips-blonks-blarts-and-zaps/simpletone.mp3'\n          //ref={}\n        ></audio>\n        <audio\n          id='beep'\n          preload='auto'\n          className='hidden'\n          src='https://res.cloudinary.com/dzsmdyknz/video/upload/v1536336611/sample-swap/sfx-and-unusual-sounds/electro-and-synthetic/clock_radio_alarm.mp3'\n          //ref={audioBuzzer}\n        ></audio>\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheet/styles.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}